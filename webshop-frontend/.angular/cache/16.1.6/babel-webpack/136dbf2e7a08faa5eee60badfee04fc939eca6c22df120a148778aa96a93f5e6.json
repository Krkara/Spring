{"ast":null,"code":"import { environment } from './../../environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegisterService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = environment.baseUrl + \"/persons\";\n  }\n  register(person) {\n    return this.httpClient.post(this.url, person);\n  }\n}\nRegisterService.ɵfac = function RegisterService_Factory(t) {\n  return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient));\n};\nRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterService,\n  factory: RegisterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","RegisterService","constructor","httpClient","url","baseUrl","register","person","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/krkara/Documents/GitHub/Spring/webshop-frontend/src/app/services/register.service.ts"],"sourcesContent":["import { environment } from './../../environment/environment';\nimport { Person } from 'src/app/models/person.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  private url = environment.baseUrl + \"/persons\";\n  constructor(private httpClient: HttpClient) {}\n\n  register(person : Person) {\n    return this.httpClient.post(this.url, person);\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iCAAiC;;;AAQ7D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,GAAG,GAAGJ,WAAW,CAACK,OAAO,GAAG,UAAU;EACD;EAE7CC,QAAQA,CAACC,MAAe;IACtB,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC,IAAI,CAACJ,GAAG,EAAEG,MAAM,CAAC;EAC/C;;AANWN,eAAe,C;mBAAfA,eAAe,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfX,eAAe,C;SAAfA,eAAe;EAAAY,OAAA,EAAfZ,eAAe,CAAAa,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}